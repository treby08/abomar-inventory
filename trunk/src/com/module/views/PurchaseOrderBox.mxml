<?xml version="1.0" encoding="utf-8"?>
<s:HGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" paddingBottom="10" paddingLeft="10" paddingRight="10" paddingTop="10"
		  xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%" creationComplete="creationCompleteHandler(event)">
	<fx:Script>
		<![CDATA[
			import com.adobe.cairngorm.control.CairngormEventDispatcher;
			import com.module.events.DataListEvent;
			import com.module.events.ItemsTransEvent;
			import com.module.events.UserEvent;
			import com.module.renderer.QuoteRenderer;
			import com.variables.AccessVars;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.events.PropertyChangeEvent;
			import mx.managers.PopUpManager;
			import mx.printing.FlexPrintJob;
			import mx.printing.FlexPrintJobScaleType;
			
			import spark.components.Application;
			import spark.events.GridEvent;
			import spark.events.GridItemEditorEvent;
			import spark.events.IndexChangeEvent;
			import spark.events.TextOperationEvent;
			private var _totalQty:int = 0;
			public var custID:String = "";
			public var _type:int = 0; 
			
			protected function creationCompleteHandler(event:FlexEvent):void
			{
				var log:ItemsTransEvent = new ItemsTransEvent(ItemsTransEvent.SEARCH_PRODUCT,{searchstr:"",sBox:this})
				CairngormEventDispatcher.getInstance().dispatchEvent(log);
				
				var log2:DataListEvent = new DataListEvent(DataListEvent.GET_BRANCH_LIST,{pBox:this})
				CairngormEventDispatcher.getInstance().dispatchEvent(log2);
				
				var log3:ItemsTransEvent = new ItemsTransEvent(ItemsTransEvent.GET_PURORD_NUMBER,{qBox:this})
				CairngormEventDispatcher.getInstance().dispatchEvent(log3);
				
				dfDate.selectedDate = new Date(); 
			}
			
			public function setDataProvider(arr:ArrayCollection,type:int):void{
				if (type == 0){
					cmbProd.dataProvider = arr;
					cmbProd.labelFunction = mycmbProdLabelFunction;
				}else if (type == 1){
					dataCollection = arr
					//cmbQuote.dataProvider = arr;
					//cmbQuote.labelFunction = mycmbQuoteLabelFunction;
				}else if (type == 3){
					dg.dataProvider = arr;
					numItems.text = "0";
					var vat:Number = 0;			
					var _subTot:Number = 0;				
					for each (var item:Object in arr){						
						_subTot += Number(item.total);
						vat += roundDec(Number(item.total)*0.12);
						_totalQty+=Number(item.qty);
						
					}
					txtSubtot.text = roundDec(_subTot).toFixed(2);
					txtVat.text = roundDec(_subTot*0.12).toFixed(2);
					txtGT.text = Number(_subTot+vat).toFixed(2);
					
					numItems.text = String(_totalQty);
				}
			}
			
			private var _arrCol:ArrayCollection;
			public function set dataCollection(arrCol:ArrayCollection):void{
				_arrCol = arrCol
				
				if (dgSearch.numElements > 0){
					dgSearch.removeAllElements();
				}
				
				if (arrCol.length > 0){
					var itemUser:QuoteRenderer;
					for each (var obj:Object in arrCol){
						itemUser = new QuoteRenderer()
						itemUser.data = obj;
						itemUser.theBox = this
						dgSearch.addElement(itemUser);
					}
				}
			}
			
			public function removeItemHandler(obj:Object):void{
				txtSubtot.text = roundDec(Number(txtSubtot.text)- obj.total).toFixed(2);
				txtVat.text = roundDec(Number(txtSubtot.text)*0.12).toFixed(2);
				txtGT.text = Number(Number(txtSubtot.text)+Number(txtVat.text)).toFixed(2);
				_totalQty = Number(Number(numItems.text) - obj.qty);
				numItems.text = String(_totalQty);
			}
			
			private function mycmbProdLabelFunction(item:Object):String{
				return (item)?item.pCode +" - "+item.pName+" @ "+item.branchName:"";
			}
			private function mycmbCusLabelFunction(item:Object):String{
				return (item)?item.fname +" "+item.lname+" ("+item.businame:")";
			}
			private function mycmbQuoteLabelFunction(item:Object):String{
				return (item)?"Q#"+item.quoteLabel +" - "+item.customer +" - "+item.branchName:"";
			}
			
			protected function cmbProdchangeHandler(event:IndexChangeEvent):void
			{
				if (cmbProd.selectedItem == null) return;
				var obj:Object = cmbProd.selectedItem;
				txtPrice.text = obj.price;
				//txtStock.text =  obj.stockCnt;
				txtQty.maximum = Number(obj.stockCnt);
				if (txtQty.value !=0){
					txtQtychangeHandler(null);
				}
			}
			
			protected function txtQtychangeHandler(event:Event):void
			{
				if (txtQty.value == 0) return;
				
				//txtStock.text =="0" || 
				txtSub.text = roundDec(Number(txtPrice.text)*int(txtQty.value)).toFixed(2);
			}
			
			private function roundDec(numIn:Number, decimalPlaces:int = 2):Number {
				var nExp:int = Math.pow(10,decimalPlaces) ; 
				var nRetVal:Number = Math.round(numIn * nExp) / nExp
				return nRetVal;
			}
			
			/* protected function cmbQuotechangingHandler(event:IndexChangeEvent):void
			{
				if (cmbQuote.selectedItem == null) return;
				var obj:Object = cmbQuote.selectedItem;
				txtBname.text = obj.businame;
				txtBAdd.text = obj.baddress;
				txtBPhone.text = obj.bPhoneNum;
				txtBMobile.text = obj.bMobileNum;
				txtBranch.text = obj.branchName;
				trace("cmbQuotechangingHandler",obj.quoteID)
				var log2:ItemsTransEvent = new ItemsTransEvent(ItemsTransEvent.GET_QUOTE_DETAILS,{quoteID:obj.quoteID,qBox:this})
				CairngormEventDispatcher.getInstance().dispatchEvent(log2);
			} */
			
			protected function btnAddclickHandler(event:MouseEvent):void
			{	
				if (cmbProd.selectedItem == null || txtQty.value == 0) return;
				var arrCol:ArrayCollection;
				if (dg.dataProvider == null)
					arrCol = new ArrayCollection();
				else
					arrCol = dg.dataProvider as ArrayCollection;
				
				var obj:Object = cmbProd.selectedItem;
				_totalQty +=txtQty.value;
				arrCol.addItem({prodDBID:obj.prodID,prodID:obj.pCode,prodName:obj.pName,qty:txtQty.value,price:obj.price,vat:txtVat.text,total:txtSub.text,branchName:obj.branchName});
				dg.dataProvider = arrCol;
				
				txtSubtot.text = roundDec(Number(txtSub.text)+Number(txtSubtot.text)).toFixed(2);
				txtVat.text = roundDec(Number(txtSubtot.text)*0.12).toFixed(2);
				txtGT.text = Number(Number(txtSubtot.text)+Number(txtVat.text)).toFixed(2);
				numItems.text = String(_totalQty);
				cmbProd.selectedIndex = -1;
				cmbProd.textInput.text = "";
				txtQty.value = 0;
				txtPrice.text = txtSub.text = "0.00";
				txtQtychangeHandler(null);
				//txtStock.text = "0";
				cmbProd.setFocus();
			}
			protected function btnAdd_keyUpHandler(event:KeyboardEvent):void
			{
				if(event.keyCode == Keyboard.ENTER)
					(event.target as Button).dispatchEvent(new MouseEvent(MouseEvent.CLICK));
			}
			
			private function updateTotal(editVat:Boolean =true):void{
				if (txtVat.text.indexOf(".")==-1)
					txtVat.text +=".00";
				
				txtSubtot.text = roundDec(Number(txtSub.text)+Number(txtSubtot.text)).toFixed(2);
				if(editVat)
					txtVat.text = roundDec(Number(txtSubtot.text)*0.12).toFixed(2);
				txtGT.text = Number(Number(txtSubtot.text)+Number(txtVat.text)).toFixed(2);
			}
			
			protected function CheckOutclickHandler(event:MouseEvent):void
			{
				if (dg.dataProviderLength == 0 )return;
				var obj:Object = {}
				obj.sales_custID = custID;//cmbQuote.selectedItem.custID;
				obj.sales_branchID = 1;//cmbCustomer.selectedItem.custID;
				obj.totalAmt = txtGT.text;
				obj.vat = txtVat.text;
				var strItem:Array = new Array();
				for each (var item:Object in dg.dataProvider){
					strItem.push(item.prodDBID+"|"+item.qty+"|"+item.total);
				}
				obj.salesDetails = strItem.join("||");
				var log2:ItemsTransEvent = new ItemsTransEvent(ItemsTransEvent.ADD_SALES,obj)
				CairngormEventDispatcher.getInstance().dispatchEvent(log2);
				//printPrevPO()
				//btnPrint.enabled = true;
			}
			
			protected function printPrevPO():void
			{
				/*var printJob:FlexPrintJob = new FlexPrintJob();
				if (printJob.start() != true) return;
				printJob.addObject(cont, FlexPrintJobScaleType.SHOW_ALL); 
				printJob.send();*/
				var _printBox:PrintPrevBox = new PrintPrevBox();
				_printBox.boxType = this;
				_printBox.orderTypeID = 0;
				_printBox.width = AccessVars.instance().mainApp.width-5;
				_printBox.height = AccessVars.instance().mainApp.height-5;
				PopUpManager.addPopUp(_printBox,this,true);
			}
			
			public function clearFields(event:MouseEvent):void{
				/* cmbQuote.selectedIndex = -1;
				cmbQuote.textInput.text = ""; */
				cmbProd.selectedIndex = -1;
				cmbProd.textInput.text = "";
				txtQty.textDisplay.text = "0";
				txtPrice.text = "0.00";
				//txtStock.text = "0.00";
				txtSub.text = "0.00";
				txtSubtot.text = "0.00";
				txtGT.text = "0.00";
				txtVat.text = "0.00";
				numItems.text = "0";
				dg.dataProvider = null;
				_totalQty = 0;
			}
			
			protected function btnNewclickHandler(event:MouseEvent):void
			{
				if (dg.dataProvider != null){
					Alert.show("Are you sure to create a new transaction?","Transaction not empty",Alert.YES|Alert.NO,null,newSalesHandler,null,Alert.NO);
				}else{
					_type = 0;
					mainCont.enabled = true;
					btnCheckOut.label = "Submit Requisition";
					btnCheckOut.visible = btnCheckOut.includeInLayout = true;
					btnEdit.visible = btnEdit.includeInLayout = false;
					clearFields(null);
					//btnPrint.enabled = false;
				}
			}
			protected function editClickHandler(event:MouseEvent):void
			{
				_type = 1;
				btnCheckOut.label = "Save Requisition Changes";
				btnCheckOut.visible = btnCheckOut.includeInLayout = true;
				mainCont.enabled = true;
			}
			
			private function newSalesHandler(event:CloseEvent):void{
				if (event.detail == Alert.YES){
					_type = 0;
					mainCont.enabled = true;
					btnCheckOut.label = "Submit Requisition";
					btnCheckOut.visible = btnCheckOut.includeInLayout = true;
					btnEdit.visible = btnEdit.includeInLayout = false;
					clearFields(null);
					//btnPrint.enabled = false;
				}
			}
			
			protected function txtVat_keyUpHandler(event:KeyboardEvent):void
			{
				if (event.keyCode == Keyboard.ENTER){
					txtGT.setFocus();
				}
			}
			
			protected function SearchClickHandler(event:MouseEvent):void
			{				
				var log2:ItemsTransEvent = new ItemsTransEvent(ItemsTransEvent.SEARCH_QUOTE,{searchstr:txtSearchStr.text,qBox:this})
				CairngormEventDispatcher.getInstance().dispatchEvent(log2);
			}
						
			
			protected function dg_gridDoubleClickHandler(event:GridEvent):void
			{
				if (event.column.columnIndex == 2){
					event.grid.dataGrid.startItemEditorSession(event.rowIndex, event.columnIndex);
				}
			}
			
			protected function dg_gridItemEditorSessionSave(event:GridItemEditorEvent):void
			{
				var item:Object = event.column.grid.dataGrid.selectedItem;
				item.total = roundDec(Number(item.qty * item.price)).toFixed(2)
				dg.dataProvider.itemUpdated(item);
				var subTot:Number = 0;
				for each (var items:Object in dg.dataProvider){
					subTot += Number(items.total)
				}
				txtSubtot.text = roundDec(subTot).toFixed(2)
				updateTotal();
			}
			
			public function reComputeHandler(obj:Object,isSelected:Boolean):void{
				
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<!--<s:Label text="Purchase Order" fontWeight="bold" fontSize="18" fontStyle="italic"/>-->
	<s:HGroup width="35%" height="100%">
		<s:BorderContainer width="100%" height="100%" cornerRadius="10" borderStyle="inset">
			<s:layout>
				<s:VerticalLayout paddingTop="5" paddingLeft="2" paddingRight="2" paddingBottom="5"/>
			</s:layout>
			<s:borderStroke> 
				<mx:SolidColorStroke 
					color="{AccessVars.instance().borderStrokeColor}" 
					weight="2"/> 
			</s:borderStroke> 
			<s:HGroup width="100%" horizontalAlign="left" verticalAlign="middle" height="30">
				<s:Label text="Search"/>
				<s:TextInput prompt="[Requisition No / Branch]" id="txtSearchStr" enter="SearchClickHandler(null)" width="180"/>
				<s:Button label="Search" click="SearchClickHandler(event)"/>
			</s:HGroup>
			<s:HGroup width="100%" fontSize="14"  fontWeight="bold" gap="2">
				<s:Label text="Requisition No." width="35%" backgroundColor="{AccessVars.instance().headerBgColor}" textAlign="center" paddingTop="5" paddingBottom="5" color="{AccessVars.instance().headerFontColor}"/>
				<s:Label text="Branch" width="65%" backgroundColor="{AccessVars.instance().headerBgColor}" textAlign="center" paddingTop="5" paddingBottom="5" color="{AccessVars.instance().headerFontColor}"/>
			</s:HGroup>
			<s:Group width="100%" height="100%">
				<s:Scroller width="100%" height="100%">
					<s:VGroup id="dgSearch" gap="2" width="100%" height="100%" contentBackgroundAlpha="1" contentBackgroundColor="0xCCCCCC" clipAndEnableScrolling="true"/>
				</s:Scroller>
			</s:Group>
			<mx:HRule width="100%" height="3"/>
			<s:HGroup width="100%" gap="5" verticalAlign="middle" fontSize="14" >
				<s:Label text="Total Quote: "/>
				<s:Label id="totCount" text="0"/>
			</s:HGroup>
		</s:BorderContainer>
	</s:HGroup>
	<s:VGroup id="cont" width="100%" height="100%" paddingBottom="5" paddingTop="5" paddingLeft="5" paddingRight="5">
		<s:VGroup id="mainCont" width="100%" height="100%" enabled="false">
			<s:BorderContainer width="100%" cornerRadius="10" borderStyle="inset">
				<s:borderStroke> 
					<mx:SolidColorStroke 
						color="{AccessVars.instance().borderStrokeColor}" 
						weight="2"/> 
				</s:borderStroke> 
				<s:HGroup  width="100%" height="100%" fontSize="16">
					<s:VGroup  width="45%" height="100%" paddingBottom="10" paddingTop="10" paddingLeft="25" paddingRight="25">
						<s:HGroup  width="100%" verticalAlign="middle">
							<s:Label text="Supplier" width="90" textAlign="right"/>
							<s:DropDownList id="cmbBranch" width="100%" />
						</s:HGroup>
						<s:HGroup width="100%" verticalAlign="middle">
							<s:Label text="Invoice To" width="90" textAlign="right"/>
							<s:TextInput id="txtInvoice" width="100%" />
						</s:HGroup>
						<s:HGroup width="100%" verticalAlign="middle">
							<s:Label text="Deliver To" width="90" textAlign="right"/>
							<s:DropDownList id="cmbDeliver" width="100%" />
						</s:HGroup>
					</s:VGroup>
					
					<s:VGroup  width="55%" height="100%" paddingBottom="5" paddingTop="5" paddingLeft="5" paddingRight="5">
						<s:HGroup width="100%" verticalAlign="middle">
							<s:Label text="PO No." width="115" textAlign="right"/>
							<s:TextInput id="txtReqNo" width="100%" editable="false"/>
							<s:Label text="Date" textAlign="center"/>
							<mx:DateField id="dfDate" width="150" showToday="true"/>
						</s:HGroup>
						<s:HGroup width="100%" verticalAlign="middle">
							<s:Label text="Item / Model No." width="115" textAlign="right"/>
							<s:ComboBox id="cmbProd" width="100%" tabIndex="2" change="cmbProdchangeHandler(event)"/>
						</s:HGroup>
						<s:HGroup width="100%" verticalAlign="middle">
							<s:Label text="Quantity" width="115" textAlign="right"/>
							<s:NumericStepper id="txtQty" width="150" value="0" textAlign="right" tabIndex="3" change="txtQtychangeHandler(event)"/>
							<s:TextInput id="txtPrice" width="150" text="0.00" textAlign="right" selectable="false" visible="false" includeInLayout="false"/>
							<s:Button id="btnAdd" label="Add  Order" tabIndex="4" click="btnAddclickHandler(event)" keyDown="btnAdd_keyUpHandler(event)"/>
							<s:Spacer width="35%"/>
							<s:Label text="Net Price"/>
							<mx:Text id="txtSub" width="100%" text="0.00" textAlign="right" />
						</s:HGroup>
						
						<!--<s:HGroup width="100%" horizontalAlign="right" verticalAlign="bottom">
						<s:HGroup verticalAlign="middle" paddingLeft="10">
						<s:Label text="Stock:" backgroundColor="0xFCFCFC" fontWeight="bold"/>
						<mx:Text id="txtStock" text="0" textAlign="right" width="100" fontWeight="bold"/>
						</s:HGroup>
						<s:Spacer width="35%"/>
						<s:HGroup width="50%" fontSize="16" verticalAlign="middle">
						<s:Label text="Net Price:" width="90"/>
						<mx:Text id="txtSub" width="100%" text="0.00" textAlign="right" />
						</s:HGroup>
						</s:HGroup>-->
						
						
						
					</s:VGroup>
				</s:HGroup>
			</s:BorderContainer>
			<s:Spacer height="5"/>
			<s:DataGrid id="dg" width="100%" height="100%" sortableColumns="false" textAlign="center" fontSize="12" editable="true"
						gridDoubleClick="dg_gridDoubleClickHandler(event)" doubleClickEnabled="true" gridItemEditorSessionSave="dg_gridItemEditorSessionSave(event)">
				<s:columns>
					<s:ArrayList>
						<s:GridColumn width="20" itemRenderer="com.module.renderer.IncludeItemRenderer" editable="false"/>
						<s:GridColumn width="45" dataField="num" headerText="Item" editable="false"/>
						<s:GridColumn dataField="qty" headerText="Qty" width="80"  editable="true"/>
						<s:GridColumn dataField="modelNo" headerText="Item / Model No.">
							<s:itemRenderer>
								<fx:Component>
									<s:DefaultGridItemRenderer textAlign="left"/>
								</fx:Component>
							</s:itemRenderer>
						</s:GridColumn>
						
						<s:GridColumn dataField="price" headerText="Price" width="180"  editable="false">
							<s:itemRenderer>
								<fx:Component>
									<s:DefaultGridItemRenderer textAlign="right"/>
								</fx:Component>
							</s:itemRenderer>
						</s:GridColumn>
						<s:GridColumn dataField="total" headerText="Extend" width="180" editable="false">
							<s:itemRenderer>
								<fx:Component>
									<s:DefaultGridItemRenderer textAlign="right" fontSize="14"/>
								</fx:Component>
							</s:itemRenderer>
						</s:GridColumn>
					</s:ArrayList>
				</s:columns>
			</s:DataGrid>
			<s:HGroup width="100%" verticalAlign="bottom" fontSize="14">
				<s:Label text="Number of Items: "/>
				<s:Label id="numItems" text="0"/>
				<s:Spacer width="100%"/>
				<s:VGroup width="40%">
					<s:HGroup width="100%">
						<s:Label text="Subtotal" width="90"/>
						<mx:Text id="txtSubtot" width="100%" text="0.00" textAlign="right"/>
					</s:HGroup>
					<s:HGroup width="100%">
						<s:Label text="VAT" width="90"/>
						<s:TextInput id="txtVat" width="100%" text="0.00" textAlign="right" borderVisible="false" restrict="0-9." focusOut="{updateTotal(false)}" keyUp="txtVat_keyUpHandler(event)"/>
					</s:HGroup>
					<s:HGroup width="100%">
						<s:Label text="TOTAL" fontSize="16"/>
						<s:Label id="txtGT" textAlign="right" text="0.00" fontSize="18" width="100%"/>
					</s:HGroup>
				</s:VGroup>
			</s:HGroup>
		</s:VGroup>		
		<mx:HRule height="5" width="100%"/>
		<s:HGroup id="hgControl" width="100%" height="50" paddingBottom="5" paddingTop="5" paddingLeft="5" paddingRight="5"
				  horizontalAlign="left" verticalAlign="middle">						
			<s:Button id="btnCheckOut" label="Submit Requisition" click="CheckOutclickHandler(event)" visible="false" includeInLayout="false"/>
			<s:Spacer width="100%"/>
			<s:Button id="btnNew"  label="New Requisition" click="btnNewclickHandler(event)"/>
			<s:Button id="btnEdit"  label="Edit Requisition" click="editClickHandler(event)" visible="false" includeInLayout="false"/>
			<!--<s:Button id="btnView"  label="View Requisition" click="printPrevPO()" visible="false" includeInLayout="false"/>-->
		</s:HGroup>
	</s:VGroup>
</s:HGroup>
