<?xml version="1.0" encoding="utf-8"?>
<s:GridItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" horizontalCenter="0" creationComplete="creationCompleteHandler(event)"
					xmlns:s="library://ns.adobe.com/flex/spark" width="100%" height="22"
					xmlns:mx="library://ns.adobe.com/flex/mx" clipAndEnableScrolling="true">
	
	<fx:Script>
		<![CDATA[
			import com.variables.AccessVars;
			
			import mx.events.FlexEvent;
			import mx.events.PropertyChangeEvent;
			
			import spark.components.DataGrid;
			import spark.events.IndexChangeEvent;
			override public function prepare(hasBeenRecycled:Boolean):void {
				cmbInvoice.dataProvider = AccessVars.instance().invoiceList;
				
				if (data && data.invID == ""){
					cmbInvoice.selectedIndex =-1;
				}else if (data && data.remarks != ""){
					
					for each(var item:Object in AccessVars.instance().invoiceList){
						if (item.invID == data.invID){
							cmbInvoice.selectedItem = item;
							break;
						}
					}
				}
				
			}
			
			
			protected function cmbRemarks_changeHandler(event:IndexChangeEvent):void
			{
				data.invID = cmbInvoice.selectedItem.invID;
				data.totalAmt = cmbInvoice.selectedItem.totalAmt;
				var dg:DataGrid = (parent.parent.parent.parent.parent.parent.parent.parent.parent as DataGrid);
				dg.dataProvider.itemUpdated(data);
				dg.dispatchEvent(new PropertyChangeEvent(PropertyChangeEvent.PROPERTY_CHANGE));
			}
			
			protected function creationCompleteHandler(event:FlexEvent):void
			{
				
				if (data && data.invID != ""){
					
					for each(var item:Object in AccessVars.instance().invoiceList){
						if (item.invID == data.invID){
							cmbInvoice.selectedItem = item;
							break;
						}
					}
				}
				
			}
			
		]]>
	</fx:Script>
	<s:HGroup width="95%" height="100%" horizontalAlign="center" verticalAlign="middle" paddingLeft="5" paddingRight="2">
		<s:DropDownList id="cmbInvoice" width="100%" labelField="invIDLabel" change="cmbRemarks_changeHandler(event)"/>
	</s:HGroup>	
</s:GridItemRenderer>
